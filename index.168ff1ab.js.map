{"mappings":"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","sources":["src/index.js","src/js/modal-registration.js","src/js/autorisation.js"],"sourcesContent":["createPopularMoviesMarkup();\nimport './js/firebase';\nimport './js/theme-btn';\nimport './js/loader';\nimport './js/input';\n// import './js/modal-markup';\n\nimport './js/fetch-trailer';\nimport './js/view-Trailer';\nimport './js/fetch-films';\nimport './js/pagination';\nimport './js/main-markup';\nimport { createPopularMoviesMarkup } from './js/main-markup';\n\nimport './js/modal';\n\nimport './js/modal-students';\nimport './js/modal-registration';\nimport './js/autorisation';\n","const refs = {\n  openModalBtn: document.querySelector('[data-modal-reg-open]'),\n  closeModalBtn: document.querySelector('[data-modal-reg-close]'),\n  modal: document.querySelector('[data-reg-modal]'),\n};\nrefs.openModalBtn.addEventListener('click', toggleModal);\nrefs.closeModalBtn.addEventListener('click', toggleModal);\n\n\n\nfunction toggleModal() {\n  refs.modal.classList.toggle('is-hidden');\n}\n","import { initializeApp } from 'firebase/app';\nimport { Notify } from 'notiflix';\nimport { getFirestore, setDoc, doc } from 'firebase/firestore';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signOut,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n} from 'firebase/auth';\n\n// Firebase AUTH\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDpHH4vTWioKzjyjXO2I80-uE6v02JiNMc',\n  authDomain: 'filmoteka-students-goit.firebaseapp.com',\n  projectId: 'filmoteka-students-goit',\n  storageBucket: 'filmoteka-students-goit.appspot.com',\n  messagingSenderId: '474370553773',\n  appId: '1:474370553773:web:273214bc0fea8263371324',\n  measurementId: 'G-8CJGR7QN75',\n};\n\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\n\nconst auth = getAuth();\nlet name;\nlet currentUser;\n\nconst loginForm = document.querySelector('.login-form');\nconst signupForm = document.querySelector('.registration-form');\nconst logout = document.querySelector('.js-btn-exit');\n\nconst logBtnContainer = document.querySelector('.js-btn-in');\nconst exitBtnContainer = document.querySelector('.js-btn-exit');\n\nsignupForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  name = signupForm.user_name.value;\n  const email = signupForm.mail.value;\n  const password = signupForm.password.value;\n\n  const ObjectDataName = {\n    name: `${name}`,\n  };\n\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(cred => {\n      // Бажано сюди впихнути НЕТЛІФАЙ\n      Notify.success(`The user: ${name} has been created`);\n      logBtnContainer.hidden = true;\n      exitBtnContainer.hidden = false;\n      signupForm.reset();\n    })\n    .catch(err => {\n      // netlify wrongs\n      Notify.failure(err.message);\n    });\n\n  // СТВОРИТИ в БД по НЕЙМ БАЗУ ДАННИх, яка буде слідкувати за списками\n  const newUserRef = doc(db, email, 'username');\n  setDoc(newUserRef, ObjectDataName, { merge: true }).catch(err =>\n    Notify.failure(err.message)\n  );\n  // addDoc(colRef, {\n  //   Or u can create Ur specific object\n  // })\n});\n\nloginForm.addEventListener('submit', e => {\n  e.preventDefault();\n  name = loginForm.login.value;\n  const email = loginForm.mail.value;\n  const password = loginForm.password.value;\n\n  signInWithEmailAndPassword(auth, email, password)\n    .then(cred => {\n      Notify.success(`user: ${name} logged in`);\n      logBtnContainer.hidden = true;\n      exitBtnContainer.hidden = false;\n    })\n    .catch(err => {\n      Notify.failure(err.message);\n    });\n});\n\nlogout.addEventListener('click', e => {\n  signOut(auth)\n    .then(() => {\n      Notify.info(`The user logged out`);\n      logBtnContainer.hidden = false;\n      exitBtnContainer.hidden = true;\n    })\n    .catch(err => {\n      Notify.failure(err.message);\n    });\n});\n\nfunction checkUserStatus() {\n  if (auth.currentUser == null) {\n    logBtnContainer.hidden = false;\n    exitBtnContainer.hidden = true;\n  }\n\n  onAuthStateChanged(auth, user => {\n    logBtnContainer.hidden = true;\n    exitBtnContainer.hidden = false;\n  })\n}\n\ncheckUserStatus();\n\n// onAuthStateChanged(auth, user => {\n//   if (!user == null) {\n//     logBtnContainer.hidden = true;\n//     exitBtnContainer.hidden = false;\n//   }\n//   logBtnContainer.hidden = false;\n//   exitBtnContainer.hidden = true;\n// });\nconsole.log(auth);\n\n\n\n// const logInBtn = document.querySelector('.login-form-btn');\n// const exitBtn = document.querySelector('.js-exit');\n\n// logInBtn.addEventListener('click', onLogInBtnClick);\n// exitBtn.addEventListener('click', onExitBtnClick);\n\n// function onLogInBtnClick() {\n//   whenUserLogged();\n// }\n// console.log(auth);\n// function whenUserLogged() {\n//     onAuthStateChanged(auth, user => {\n//       if (!auth.currentUser) {\n//         logBtnContainer.hidden = true;\n//         exitBtnContainer.hidden = false;\n//       }\n//       logBtnContainer.hidden = false;\n//       exitBtnContainer.hidden = true;\n//     })\n  \n// }\n// whenUserLogged();\n\n// function onExitBtnClick() {\n//   onAuthStateChanged(auth, user => {\n//   if (user.isAnonymous) {\n//     logBtnContainer.hidden = false;\n//     exitBtnContainer.hidden = true;\n//   }\n// })\n// }\n\nconst loginFormBtn = document.querySelector('#data-formBtn-login');\nconst regFormBtn = document.querySelector('#data-formBtn-reg');\nconst logForm = document.querySelector('#data-login-box');\nconst regForm = document.querySelector('#data-reg-box');\nloginFormBtn.addEventListener('click', e => {\n  logForm.classList.add('current');\n  regForm.classList.remove('current');\n  loginFormBtn.classList.toggle('target-btn');\n  regFormBtn.classList.toggle('target-btn');\n});\nregFormBtn.addEventListener('click', e => {\n  regForm.classList.add('current');\n  logForm.classList.remove('current');\n  loginFormBtn.classList.toggle('target-btn');\n  regFormBtn.classList.toggle('target-btn');\n});\n\n// logout.addEventListener('click', e => {\n//   signOut(auth)\n//     .then(() => {\n//       Notify.info(The user ${name} signed out);\n//     })\n//     .catch(err => {\n//       Notify.failure(err.message);\n//     });\n// });\n\n\n// function onFormToggle(add, rev) {\n//   console.log('HELLOO');\n//   add.classList.add('current');\n//   rev.classList.remove('current');\n//   loginFormBtn.classList.toggle('target-btn');\n//   regFormBtn.classList.toggle('target-btn');\n// }"],"names":["parcelRequire","$4a1bd4b03c7d6580$var$refs","openModalBtn","document","querySelector","closeModalBtn","modal","$4a1bd4b03c7d6580$var$toggleModal","classList","toggle","addEventListener","$gKkQl","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","$76531c2ea9e2a80e$var$db","$ftYLF","getFirestore","$76531c2ea9e2a80e$var$auth","$eyjy7","getAuth","$76531c2ea9e2a80e$var$name","$76531c2ea9e2a80e$var$loginForm","$76531c2ea9e2a80e$var$signupForm","$76531c2ea9e2a80e$var$logout","$76531c2ea9e2a80e$var$logBtnContainer","$76531c2ea9e2a80e$var$exitBtnContainer","e","preventDefault","user_name","value","email","mail","password","ObjectDataName","name","createUserWithEmailAndPassword","then","cred","$7Y9D8","Notify","success","hidden","reset","catch","err","failure","message","newUserRef","doc","setDoc","merge","login","signInWithEmailAndPassword","signOut","info","currentUser","onAuthStateChanged","user","console","log","$76531c2ea9e2a80e$var$loginFormBtn","$76531c2ea9e2a80e$var$regFormBtn","$76531c2ea9e2a80e$var$logForm","$76531c2ea9e2a80e$var$regForm","add","remove","$bmZal","createPopularMoviesMarkup"],"version":3,"file":"index.168ff1ab.js.map"}